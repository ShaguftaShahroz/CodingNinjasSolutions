/*
Given an array of integers, check whether it represents max-heap or not. Return true if the given array represents max-heap, else return false.
Input Format:
The first line of input contains an integer, that denotes the value of the size of the array. Let us denote it with the symbol N.
The following line contains N space separated integers, that denote the value of the elements of the array.
Output Format :
The first and only line of output contains true if it represents max-heap and false if it is not a max-heap.
Constraints:
1 <= N <= 10^5
1 <= Ai <= 10^5
Time Limit: 1 sec
*/
import java.util.*;
public class Solution {

	public static boolean checkMaxHeap(int arr[]) {
		/*
		 * Your class should be named Solution Don't write main(). Don't read input, it
		 * is passed as function argument. Return output and don't print it. Taking
		 * input and printing output is handled automatically.
		 */
        int n = arr.length;
        if(n==0)
            return false;
        
        
        Queue<Integer> q = new LinkedList<>();
        q.offer(0);
        while(!q.isEmpty())
        {
            int size = q.size();
            while(size-- > 0)
            {
                int parent = q.poll();
                int left = 2*parent + 1;
        		int right = 2*parent + 2;
                if(left < n)
                    q.offer(left);
                else
                    break;
                if(arr[left] > arr[parent])
                {
                    return false;
                }
                if(right < n)
                    q.offer(right);
                else
                    continue;
            	if(arr[right] > arr[parent])
                    return false;
            }
            
        }
        return true;
	}
}
